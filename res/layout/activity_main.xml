<!--
 Android layout xml files consist of view groups and views

View groups (eg: 'RelativeLayout' tag below) define the layout of various app widgets.

The Views define the actual widgets themselves (eg: EditText tag below) - eg: buttons, text areas, sliders, maps etc
-->

<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical" >
   
    <!--
         Define an 'EditText' widget. This widget creates an area where the user can enter text..
         'match_parent' means the width/height of a widget will match that of the parent view 
         so it can take up as much space as possible 
         Set 'gravity' attribute to "top" so that text floats/goes to the top- of the view->
    -->


  
    <EditText
        android:id="@+id/text"
        android:layout_width="match_parent"
        android:layout_height="0dp"
        android:layout_weight="1"
        android:gravity="top"
        android:hint="@string/edit_text_hint"
        android:maxLength="400" 
        android:background="#F5F5dc"
        />

    <!--
          Nesting another Linear layout view group within the outermost LinearLayout
          NOTE: nesting view groups like this is not efficient way of doing things
          but it is simple to implement
    -->
    
  

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="horizontal" >

        <!--
        Use id attribute to assign an unique id to the 'Button' resource to refer to later.
        +id ensures a new id is generated with for the first time with unique value "save"
        When the application builds the id is added to the R.java file within the project.
        -->

        <Button
            android:id="@+id/save"
            android:layout_width="0dp"
            android:layout_weight="50"
            android:layout_height="wrap_content"
            android:text="@string/save" />

        <Button
            android:id="@+id/lock"
            android:layout_width="0dp"
            android:layout_weight="50"
            android:layout_height="wrap_content"
            android:text="@string/Lock" />
    </LinearLayout>

</LinearLayout>